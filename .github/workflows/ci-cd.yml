name: CI/CD Pipeline

env:
  AWS_REGION: us-east-1
  ECR_ALIAS: public.ecr.aws/t4h0a4r3

on:
  push:
    branches:
      - main

jobs:
  ci:
    name: Build & Scan Docker Images
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build Docker images
        run: |
          docker build -t $ECR_ALIAS/url-shortener-shortener:${{ github.sha }} ./shortener-service
          docker build -t $ECR_ALIAS/url-shortener-redirect:${{ github.sha }} ./redirect-service
          docker build -t $ECR_ALIAS/url-shortener-frontend:${{ github.sha }} ./frontend

      - name: Scan shortener service
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: $ECR_ALIAS/url-shortener-shortener:${{ github.sha }}
          format: "json"
          exit-code: "1"
          vuln-type: "os,library"
          severity: "CRITICAL,HIGH"

      - name: Scan redirect service
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: $ECR_ALIAS/url-shortener-redirect:${{ github.sha }}
          format: "json"
          exit-code: "1"
          vuln-type: "os,library"
          severity: "CRITICAL,HIGH"

      - name: Scan frontend service
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: $ECR_ALIAS/url-shortener-frontend:${{ github.sha }}
          format: "json"
          exit-code: "1"
          vuln-type: "os,library"
          severity: "CRITICAL,HIGH"

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::586794451190:role/GithubActionsRole-url-shortener
          aws-region: ${{ env.AWS_REGION }}

      - name: Log in to Amazon ECR
        run: |
          aws ecr-public get-login-password --region ${{ env.AWS_REGION }} \
          | docker login --username AWS --password-stdin public.ecr.aws

      - name: Push Docker images to Amazon ECR
        run: |
          docker push $ECR_ALIAS/url-shortener-shortener:${{ github.sha }}
          docker push $ECR_ALIAS/url-shortener-redirect:${{ github.sha }}
          docker push $ECR_ALIAS/url-shortener-frontend:${{ github.sha }}

  # cd:
  #   name: Deploy to ECS
  #   runs-on: ubuntu-latest
  #   needs: ci
  #   permissions:
  #     contents: read
  #     id-token: write

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4

  #     - name: Configure AWS credentials (OIDC)
  #       uses: aws-actions/configure-aws-credentials@v4
  #       with:
  #         role-to-assume: arn:aws:iam::586794451190:role/GithubActionsRole-url-shortener
  #         aws-region: ${{ env.AWS_REGION }}

  #     - name: Update Shortener Service
  #       run: |
  #         TASK_FAMILY=shortener-task
  #         IMAGE_URI=$ECR_ALIAS/url-shortener-shortener:${{ github.sha }}

  #         # Get current task definition JSON
  #         aws ecs describe-task-definition \
  #           --task-definition $TASK_FAMILY \
  #           --query 'taskDefinition' > task-def.json

  #         # Update image URI
  #         cat task-def.json | \
  #           jq --arg IMAGE_URI "$IMAGE_URI" '.containerDefinitions[0].image = $IMAGE_URI' \
  #           > new-task-def.json

  #         # Register new revision
  #         aws ecs register-task-definition \
  #           --cli-input-json file://new-task-def.json

  #         # Force redeploy the service
  #         aws ecs update-service \
  #           --cluster url-shortener-cluster \
  #           --service shortener-service \
  #           --force-new-deployment

  #     - name: Update Redirect Service
  #       run: |
  #         TASK_FAMILY=redirect-task
  #         IMAGE_URI=public.ecr.aws/t4h0a4r3/url-shortener-redirect:${{ github.sha }}

  #         aws ecs describe-task-definition \
  #           --task-definition $TASK_FAMILY \
  #           --query 'taskDefinition' > task-def.json

  #         cat task-def.json | \
  #           jq --arg IMAGE_URI "$IMAGE_URI" '.containerDefinitions[0].image = $IMAGE_URI' \
  #           > new-task-def.json

  #         aws ecs register-task-definition \
  #           --cli-input-json file://new-task-def.json

  #         aws ecs update-service \
  #           --cluster url-shortener-cluster \
  #           --service redirect-service \
  #           --force-new-deployment

  #     - name: Update Frontend Service
  #       run: |
  #         TASK_FAMILY=frontend-task
  #         IMAGE_URI=public.ecr.aws/t4h0a4r3/url-shortener-frontend:${{ github.sha }}

  #         aws ecs describe-task-definition \
  #           --task-definition $TASK_FAMILY \
  #           --query 'taskDefinition' > task-def.json

  #         cat task-def.json | \
  #           jq --arg IMAGE_URI "$IMAGE_URI" '.containerDefinitions[0].image = $IMAGE_URI' \
  #           > new-task-def.json

  #         aws ecs register-task-definition \
  #           --cli-input-json file://new-task-def.json

  #         aws ecs update-service \
  #           --cluster url-shortener-cluster \
  #           --service frontend-service \
  #           --force-new-deployment
